// Code generated by protoc-gen-go.
// source: beans.sendmessage.proto
// DO NOT EDIT!

/*
Package beans is a generated protocol buffer package.

It is generated from these files:
	beans.sendmessage.proto

It has these top-level messages:
	SendMessage
*/
package beans

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// import beans1 "."
// import beans2 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SendMessage_MessageTypeId int32

const (
	SendMessage_DEV_GYROSCOPE SendMessage_MessageTypeId = 0
	SendMessage_USER_OPTION   SendMessage_MessageTypeId = 1
)

var SendMessage_MessageTypeId_name = map[int32]string{
	0: "DEV_GYROSCOPE",
	1: "USER_OPTION",
}
var SendMessage_MessageTypeId_value = map[string]int32{
	"DEV_GYROSCOPE": 0,
	"USER_OPTION":   1,
}

func (x SendMessage_MessageTypeId) Enum() *SendMessage_MessageTypeId {
	p := new(SendMessage_MessageTypeId)
	*p = x
	return p
}
func (x SendMessage_MessageTypeId) String() string {
	return proto.EnumName(SendMessage_MessageTypeId_name, int32(x))
}
func (x *SendMessage_MessageTypeId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendMessage_MessageTypeId_value, data, "SendMessage_MessageTypeId")
	if err != nil {
		return err
	}
	*x = SendMessage_MessageTypeId(value)
	return nil
}
func (SendMessage_MessageTypeId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type SendMessage struct {
	Tocken           *string                    `protobuf:"bytes,1,req,name=tocken" json:"tocken,omitempty"`
	MessageId        *SendMessage_MessageTypeId `protobuf:"varint,2,req,name=messageId,enum=beans.SendMessage_MessageTypeId" json:"messageId,omitempty"`
	DeviceMessage    *DevMessage                `protobuf:"bytes,3,opt,name=deviceMessage" json:"deviceMessage,omitempty"`
	UserOption       *UesrOptionMessage         `protobuf:"bytes,4,opt,name=userOption" json:"userOption,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *SendMessage) Reset()                    { *m = SendMessage{} }
func (m *SendMessage) String() string            { return proto.CompactTextString(m) }
func (*SendMessage) ProtoMessage()               {}
func (*SendMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SendMessage) GetTocken() string {
	if m != nil && m.Tocken != nil {
		return *m.Tocken
	}
	return ""
}

func (m *SendMessage) GetMessageId() SendMessage_MessageTypeId {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return SendMessage_DEV_GYROSCOPE
}

func (m *SendMessage) GetDeviceMessage() *DevMessage {
	if m != nil {
		return m.DeviceMessage
	}
	return nil
}

func (m *SendMessage) GetUserOption() *UesrOptionMessage {
	if m != nil {
		return m.UserOption
	}
	return nil
}

func init() {
	proto.RegisterType((*SendMessage)(nil), "beans.SendMessage")
	proto.RegisterEnum("beans.SendMessage_MessageTypeId", SendMessage_MessageTypeId_name, SendMessage_MessageTypeId_value)
}

var fileDescriptor1 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x4a, 0x4d, 0xcc,
	0x2b, 0xd6, 0x2b, 0x4e, 0xcd, 0x4b, 0xc9, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x4b, 0x48, 0x89, 0x41, 0xe4, 0x53, 0x52, 0xcb, 0x50, 0xa4,
	0xa5, 0xa4, 0x20, 0xe2, 0xa5, 0xc5, 0xa9, 0x45, 0xf9, 0x05, 0x25, 0x28, 0x72, 0x4a, 0xf7, 0x19,
	0xb9, 0xb8, 0x83, 0x81, 0x06, 0xfa, 0x42, 0x44, 0x85, 0xf8, 0xb8, 0xd8, 0x4a, 0xf2, 0x93, 0xb3,
	0x53, 0xf3, 0x24, 0x18, 0x15, 0x98, 0x34, 0x38, 0x85, 0x8c, 0xb9, 0x38, 0xa1, 0x1a, 0x3c, 0x53,
	0x24, 0x98, 0x80, 0x42, 0x7c, 0x46, 0x0a, 0x7a, 0x10, 0xf3, 0x90, 0xb4, 0xe9, 0x41, 0xe9, 0x90,
	0xca, 0x02, 0xa0, 0x3a, 0x21, 0x0d, 0x2e, 0x5e, 0xa0, 0x23, 0x32, 0x93, 0x53, 0xa1, 0xc2, 0x12,
	0xcc, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x82, 0x50, 0x8d, 0x2e, 0xa9, 0x65, 0x30, 0xeb, 0x74, 0xb8,
	0xb8, 0x40, 0xce, 0xf2, 0x2f, 0x28, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x01, 0x2b, 0x93, 0x80, 0x2a,
	0x0b, 0x4d, 0x2d, 0x86, 0x4a, 0x40, 0x55, 0x2b, 0x19, 0x73, 0xf1, 0xa2, 0x5a, 0x24, 0xc8, 0xc5,
	0xeb, 0xe2, 0x1a, 0x16, 0xef, 0x1e, 0x19, 0xe4, 0x1f, 0xec, 0xec, 0x1f, 0xe0, 0x2a, 0xc0, 0x20,
	0xc4, 0xcf, 0xc5, 0x1d, 0x1a, 0xec, 0x1a, 0x14, 0xef, 0x1f, 0x10, 0xe2, 0xe9, 0xef, 0x27, 0xc0,
	0x08, 0x08, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x0e, 0xcf, 0x21, 0x36, 0x01, 0x00, 0x00,
}
