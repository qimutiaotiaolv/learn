// Code generated by protoc-gen-go.
// source: messages.horse.proto
// DO NOT EDIT!

/*
Package messages is a generated protocol buffer package.

protoc --go_out=. beans.devmessage.proto
./pbjs ../../../../assets/protofile/beans.devmessage.proto -t commonjs > ../../../../assets/beans/beans.devmessage.js

It is generated from these files:
	messages.horse.proto

It has these top-level messages:
	RoomMessage
	UserMessage
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type RoomMessage struct {
	RoomId            *string  `protobuf:"bytes,1,opt,name=room_id" json:"room_id,omitempty"`
	RoomType          *int32   `protobuf:"varint,2,opt,name=room_type" json:"room_type,omitempty"`
	GameId            *string  `protobuf:"bytes,3,opt,name=game_id" json:"game_id,omitempty"`
	CountryId         *string  `protobuf:"bytes,4,opt,name=country_id" json:"country_id,omitempty"`
	ArearId           *string  `protobuf:"bytes,5,opt,name=arear_id" json:"arear_id,omitempty"`
	RegionId          *string  `protobuf:"bytes,6,opt,name=region_id" json:"region_id,omitempty"`
	CityId            *string  `protobuf:"bytes,7,opt,name=city_id" json:"city_id,omitempty"`
	IspId             *string  `protobuf:"bytes,8,opt,name=isp_id" json:"isp_id,omitempty"`
	IpRegion          *string  `protobuf:"bytes,9,opt,name=ip_region" json:"ip_region,omitempty"`
	MaxPlayercount    *int32   `protobuf:"varint,10,opt,name=max_playercount" json:"max_playercount,omitempty"`
	CurPlayercount    *int32   `protobuf:"varint,11,opt,name=cur_playercount" json:"cur_playercount,omitempty"`
	Longitude         *float32 `protobuf:"fixed32,13,opt,name=longitude" json:"longitude,omitempty"`
	Latitude          *float32 `protobuf:"fixed32,14,opt,name=latitude" json:"latitude,omitempty"`
	DeviceInfo        *string  `protobuf:"bytes,15,opt,name=device_info" json:"device_info,omitempty"`
	PlayerTockenArray []string `protobuf:"bytes,12,rep,name=player_tocken_array" json:"player_tocken_array,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *RoomMessage) Reset()                    { *m = RoomMessage{} }
func (m *RoomMessage) String() string            { return proto.CompactTextString(m) }
func (*RoomMessage) ProtoMessage()               {}
func (*RoomMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoomMessage) GetRoomId() string {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return ""
}

func (m *RoomMessage) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *RoomMessage) GetGameId() string {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return ""
}

func (m *RoomMessage) GetCountryId() string {
	if m != nil && m.CountryId != nil {
		return *m.CountryId
	}
	return ""
}

func (m *RoomMessage) GetArearId() string {
	if m != nil && m.ArearId != nil {
		return *m.ArearId
	}
	return ""
}

func (m *RoomMessage) GetRegionId() string {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return ""
}

func (m *RoomMessage) GetCityId() string {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return ""
}

func (m *RoomMessage) GetIspId() string {
	if m != nil && m.IspId != nil {
		return *m.IspId
	}
	return ""
}

func (m *RoomMessage) GetIpRegion() string {
	if m != nil && m.IpRegion != nil {
		return *m.IpRegion
	}
	return ""
}

func (m *RoomMessage) GetMaxPlayercount() int32 {
	if m != nil && m.MaxPlayercount != nil {
		return *m.MaxPlayercount
	}
	return 0
}

func (m *RoomMessage) GetCurPlayercount() int32 {
	if m != nil && m.CurPlayercount != nil {
		return *m.CurPlayercount
	}
	return 0
}

func (m *RoomMessage) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *RoomMessage) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *RoomMessage) GetDeviceInfo() string {
	if m != nil && m.DeviceInfo != nil {
		return *m.DeviceInfo
	}
	return ""
}

func (m *RoomMessage) GetPlayerTockenArray() []string {
	if m != nil {
		return m.PlayerTockenArray
	}
	return nil
}

type UserMessage struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserMessage) Reset()                    { *m = UserMessage{} }
func (m *UserMessage) String() string            { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()               {}
func (*UserMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserMessage) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserMessage) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*RoomMessage)(nil), "messages.RoomMessage")
	proto.RegisterType((*UserMessage)(nil), "messages.UserMessage")
}

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0xd0, 0xcd, 0x4e, 0xc3, 0x30,
	0x0c, 0x00, 0x60, 0xad, 0x63, 0x5b, 0xeb, 0xc2, 0x0a, 0x1d, 0x12, 0x91, 0xb8, 0x4c, 0x3b, 0xed,
	0x34, 0xf1, 0x22, 0x5c, 0x90, 0x38, 0x57, 0x51, 0x6b, 0x4a, 0x44, 0x5b, 0x47, 0x4e, 0x0a, 0xf4,
	0xcd, 0x78, 0x3c, 0x12, 0x57, 0xe3, 0xe7, 0xe8, 0xcf, 0x7f, 0x89, 0xe1, 0xb6, 0x47, 0xe7, 0x74,
	0x8b, 0xee, 0xf4, 0x4a, 0xec, 0xf0, 0x64, 0x99, 0x3c, 0x95, 0xe9, 0x59, 0x0f, 0x5f, 0x09, 0xe4,
	0x4f, 0x44, 0xfd, 0xe3, 0x0c, 0x65, 0x01, 0x1b, 0x0e, 0x61, 0x65, 0x1a, 0xb5, 0xd8, 0x2f, 0x8e,
	0x59, 0x79, 0x03, 0x99, 0x80, 0x9f, 0x2c, 0xaa, 0x24, 0xd0, 0x2a, 0xd6, 0xb4, 0xba, 0xc7, 0x58,
	0xb3, 0x94, 0x9a, 0x12, 0xa0, 0xa6, 0x71, 0xf0, 0x3c, 0x45, 0xbb, 0x10, 0xbb, 0x86, 0x54, 0x33,
	0x6a, 0x8e, 0xb2, 0xfa, 0x99, 0x84, 0xad, 0xa1, 0x21, 0xd2, 0x5a, 0x28, 0x4c, 0xaa, 0x8d, 0x97,
	0xae, 0x8d, 0xc0, 0x16, 0xd6, 0xc6, 0xd9, 0x18, 0xa7, 0xe7, 0x1e, 0x63, 0xab, 0xb9, 0x4d, 0x65,
	0x42, 0x77, 0x50, 0xf4, 0xfa, 0xb3, 0xb2, 0x9d, 0x9e, 0x90, 0x65, 0xad, 0x02, 0x79, 0x56, 0x48,
	0xd4, 0x23, 0xff, 0x4b, 0xe4, 0x92, 0x08, 0x43, 0x3a, 0x1a, 0x5a, 0xe3, 0xc7, 0x06, 0xd5, 0x55,
	0xa0, 0x24, 0xbe, 0xae, 0xd3, 0x7e, 0x96, 0xad, 0xc8, 0x0e, 0xf2, 0x06, 0xdf, 0x4d, 0x1d, 0xbe,
	0x35, 0xbc, 0x90, 0x2a, 0x64, 0xd7, 0x3d, 0xec, 0xe6, 0x71, 0x95, 0xa7, 0xfa, 0x0d, 0x87, 0x4a,
	0x33, 0xeb, 0x49, 0x5d, 0xee, 0x97, 0xc7, 0xec, 0xf0, 0x00, 0xf9, 0xb3, 0x43, 0xfe, 0x73, 0xb9,
	0x31, 0x84, 0xbf, 0x97, 0x0b, 0x3b, 0xac, 0x76, 0xee, 0x83, 0xb8, 0x91, 0xc3, 0x65, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x64, 0xc0, 0x06, 0x55, 0x8d, 0x01, 0x00, 0x00,
}
